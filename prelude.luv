struct Range:
  int start
  int stop
  int step

struct RangeIter:
  *Range obj
  int cur

on Range:
  def __iter__(*Range self):
    return RangeIter(self, self.start)

on RangeIter:
  def __next__(*RangeIter self):
    if self.cur >= self.obj.stop:
      return false, 0
    ret = self.cur
    self.cur += self.obj.step
    return true, ret

import_macros "prelude.mac.py"

def range(int n):  // TODO: magic 3 arg range() via a macro
  return Range(0, n, 1)

// TODO: implement here with macros:
// iter()
// next()
// enumerate()
